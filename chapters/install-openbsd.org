* Install =OpenBSD=

** Create bootable USB install media

*** Erase install media partition

Before burning the install media file to the USB, you better to destroy the existing USB partitions.

**** MacOS

If you're using =MacOS=, plug the USB in and run =diskutil disk= to list your USB device:

#+BEGIN_SRC bash
  diskutil list 

  #
  # ... Ignore the internal SSD
  #

  # /dev/disk5 (external, physical):
  #    #:                       TYPE NAME       SIZE       IDENTIFIER
  #    0:      GUID_partition_scheme           *30.8 GB    disk5
  #    1:                        EFI EFI        209.7 MB   disk5s1
  #    2:       Microsoft Basic Data OPENBSD    30.4 GB    disk5s2
  #                     (free space)            135.2 MB   -
#+END_SRC

So, the =/dev/disk5= is your USB. Run the following command to erase the existing partitions:

#+BEGIN_SRC bash
  #
  # You have to unmount it first, otherwise, you're not
  # allowed to overwrite it.
  #
  sudo diskutil unmountDisk /dev/disk5

  #
  # Now, erase the existing partitions
  # allowed to overwrite it.
  #
  sudo dd if=/dev/zero of=/dev/disk5 bs=512 count=1
#+END_SRC

If you run =diskutil list= again, you should see this:

#+BEGIN_SRC bash
  /dev/disk5 (external, physical):
     #:                       TYPE NAME                    SIZE       IDENTIFIER
     0:                                                   *30.8 GB    disk5
#+END_SRC

So, that means the existing partitions are gone.


**** FreeBSD

#+BEGIN_SRC bash
  lsblk

  # DEVICE         MAJ:MIN SIZE TYPE                                    LABEL MOUNT
  # da0              1:188  29G MBR                                         - -
  #   <FREE>         -:-   512B -                                           - -
  #   da0s1          1:189 480K efi                                         - -
  #   da0s4          1:190 664M !166                                        - -
  #   <FREE>         -:-    28G -                                           - -
#+END_SRC

So, the =/dev/da0= is your USB, run the following command to erase the existing partitions:

#+BEGIN_SRC bash
  doas dd if=/dev/zero of=/dev/da0 bs=512 count=1 
#+END_SRC


*** Download IMG file and write to USB

Find your mirror from [[https://www.openbsd.org/ftp.html][here]] and download the =install74.img=.

For installing OpenBSD on Apple M1/M2 architecture, you should download =ARM64=!!!

After that, write the IMG file to USB:

#+BEGIN_SRC bash
  #
  # MacOS
  #
  sudo dd if=$HOME/Downloads/install74.img of=/dev/disk5 bs=1M

  #
  # FreeBSD
  #
  doas dd if=$HOME/Downloads/install74.img of=/dev/da0 bs=1M
#+END_SRC


** If you're installing =OpenBSD= on =Appple Silicon=

*** Remove the existing =Asahi Fedora= if you've already installed

Follow this [[https://www.youtube.com/watch?v=10thOSWGrpc&list=PLlJZBob--XJOblzgXe3o9BMmzjsv97KRZ][video]] and jump to =Bonus= section and see how to remove installed =Asahi Fedora= beforing continue!!!

Basically, use =diskutil list= to locate the =EFI EFI-ASAHI= device like below:

#+BEGIN_SRC bash
  diskutil list

  # 4:  EFI EFI - ASAHI  524.3MB disk0s4
#+END_SRC


And the, erase it like this:

#+BEGIN_SRC bash
  diskutil eraseVolume JHFS+ empty /dev/disk0s4
#+END_SRC


After that, open =Disk Utility=, and remove all =Asahi= partitions by the following steps:

**** View -> Show All Devices

**** Click the =APPLE SSD= (entire disk) on the side bar, and click =Partition=

**** DO NOT TOUCH the following partitions:

- Macintosh HD
- First and last partitions (on the top and nearby the Macintosh partition)


**** Delete all Asahi linux related partitions: Click on it and press =-= button to delete:

If you do a =diskutil list= now:

#+BEGIN_SRC bash
  diskutil list

  # 3:  Apple_APFS          Container disk2    2.5 GB    disk0s3
  # 4:  Apple_HFS           empty              524.3 MB  disk0s4
  # 5:  Linux Filesystem                       1.1 GB    disk0s5
  # 6:  Linux Filesystem                       90 GB     disk0s6

  # 7:  Apple_APFS_Recovery Container disk3    5.4 GB    disk0s7
#+END_SRC

Those =disk0s3/4/5/6= are Asahi partitions!!!

Finaly, reboot.


*** Install/Re-install Ashahi installer

Run the following command to start =Asahi Installer=:

#+BEGIN_SRC bash
  curl https://alx.sh | sh
#+END_SRC

If you don't free up the disk space, then you should choose this:

#+BEGIN_SRC bash
  Choose what to do:
    r: Resize an existing partition to make space for a new OS
#+END_SRC


Once that is done, choose to install:

#+BEGIN_SRC bash
  Choose what to do:
	f: Install an OS into free space
#+END_SRC


And then, choose this and follow the steps presented to you:

#+BEGIN_SRC bash
  Choose an OS to install:
	5: UEFI environment only (m1n1 + U-Boot + ESP)
#+END_SRC


After that done, press =Enter= to shutdown and wait for =30= seconds. 


*** Kick on the =OpenBSD= installer

Plug the USB into one of the type-C ports and hold down the =Power= button until you see =Loading startup options...=, and select =UEFI boot=, then you should see the =MacOS Recovery= UI.

Select your admin user and type the password, the =Asashi Linux Install (second step)= should be running in the terminal.

Read and follow the prompt to finish the reset steps, after that, it will reboot and you will see the  =OpenBSD= installer!!!


** Install process for =Apple Silicon=

*** Network configuration

#+BEGIN_SRC bash
  System hostname? (short form, e.g. 'foo') my-openbsd

  Available network interfaces are: bwfm0 vlan0.
  Network interface to configure? (name, lladdr, '?', or 'done') [bwfm0]
  Access point? (ESSID, 'any', List# or '?') [YOUR_SSID_HERE]
  Security protocl? (O)pen, (W)ep, WPA-(P)SK [P]
  WPA passphrase? (will echo) [YOUR_WIFI_PASSWORD_HERE]
  IPv4 address for bwfm0? (or 'autoconf' or 'none') [autoconf]
  IPv6 address for bwfm0? (or 'autoconf' or 'none') [none]
  Available network interfaces are: vio0 vlan0.
  Network interface to configure? (name, lladdr, '?', or 'done') [done]

  #
  # If you're connecting to hidden SSID, then DHCP will fail, you should choose 'none'.
  #
  Default IPv4 route? (IPv4 address or 'none') [YOUR_ROUTER_IP_HERE]

  DNS domain name? (e.g. 'example.com') [my.domain] my-openbsd.domain

  #
  # Your router
  #
  DNS nameservers? (IP address list or 'none') [YOUR_ROUTER_IP_HERE]
#+END_SRC


*** Partitioning

#+BEGIN_SRC bash
  Available disks are: sd0
  Which disk is the root disk? ('?' for details) [sd0] ?
      sd0: ATA, BHYVE SATA DISK, 001  (0.6G)
      sd1: NVMe, bhyve-NVMe, 1.0  (30.0G)
  Available disks are: sd0 sd1.

  #
  # Super important to choose the 'sd1' instead of 'sd0'
  #
  Which disk is the root disk? ('?' for details) [sd0] sd1

  Encrypt the root disk with a passphrase? [no]
  No valid MBR or GPT.

  #
  # Super important to choose 'G'!!!
  # Otherwise, it won't boot after installation!!!
  #
  Use (W)hole disk MBR, whole disk (G)PT or (E)dit? [whole] G
  An EFI/GPT disk may not boot. Proceed? [no] yes
  Setting OpenBSD GPT partition to whole sd1...done.
  The auto-allocated layout for sd1 is:
  #                size           offset  fstype [fsize bsize   cpg]
    a:          1024.0M           532544  4.2BSD   2048 16384     1 # /
    b:          2027.8M          2629696    swap
    c:         30720.0M                0  unused
    d:          1678.2M          6782624  4.2BSD   2048 16384     1 # /tmp
    e:          2612.1M         10219616  4.2BSD   2048 16384     1 # /var
    f:          3447.8M         15569248  4.2BSD   2048 16384     1 # /usr
    g:           968.3M         22630304  4.2BSD   2048 16384     1 # /usr/X11R6
    h:          3945.7M         24613440  4.2BSD   2048 16384     1 # /usr/local
    i:           260.0M               64   MSDOS
    j:          1889.5M         32694208  4.2BSD   2048 16384     1 # /usr/src
    k:          5899.1M         36564000  4.2BSD   2048 16384     1 # /usr/obj
    l:          6967.3M         48645376  4.2BSD   2048 16384     1 # /home

  Use (A)uto layout, (E)dit auto layout, or create (C)ustom layout? [a] a

  Available disks are: sd0.
  Which disk do you wish to initialize? (or 'done') [done]
#+END_SRC


*** Install file sets

#+BEGIN_SRC bash
  Let's install the sets!
  Location of sets? (disk http nfs or 'done') [http] disk
  Is the disk partition already mounted? [no]
  Available disks are: sd0 sd1.
  Which disk contains the install media? (or 'done') [sd0]
    a:          1358848             1024  4.2BSD   2048 16384 16142
    i:              960               64   MSDOS
  Available sd0 partitions are: a i.
  Which sd0 partition has the install sets? (or 'done') [a]
  Pathname to the sets? (or 'done') [7.4/amd64]

  Select sets by entering a set name, a file name pattern or 'all'. De-select
  sets by prepending a '-', e.g.: '-game*'. Selected sets are labelled '[X]'.
      [X] bsd           [X] base74.tgz    [X] game74.tgz    [X] xfont74.tgz
      [X] bsd.mp        [X] comp74.tgz    [X] xbase74.tgz   [X] xserv74.tgz
      [X] bsd.rd        [X] man74.tgz     [X] xshare74.tgz
#+END_SRC

And here is the description for each file set:

#+BEGIN_SRC fish
  bsd	        The kernel (required)
  bsd.mp	        The multi-processor kernel (only on some platforms)
  bsd.rd	        The ramdisk kernel
  base74.tgz	The base system (required)
  comp74.tgz	The compiler collection, headers and libraries
  man74.tgz	Manual pages
  game74.tgz	Text-based games
  xbase74.tgz	Base libraries and utilities for X11 (requires xshare74.tgz)
  xfont74.tgz	Fonts used by X11
  xserv74.tgz	X11's X servers
  xshare74.tgz	X11's man pages, locale settings and includes
#+END_SRC

If you don't need =X=, then de-selection the following file sets:

#+BEGIN_SRC bash
Set name(s)? (or 'abort' or 'done') [done] -game*
    [X] bsd           [X] base74.tgz    [ ] game74.tgz    [X] xfont74.tgz
    [X] bsd.mp        [X] comp74.tgz    [X] xbase74.tgz   [X] xserv74.tgz
    [X] bsd.rd        [X] man74.tgz     [X] xshare74.tgz
Set name(s)? (or 'abort' or 'done') [done] -x*
    [X] bsd           [X] base74.tgz    [ ] game74.tgz    [ ] xfont74.tgz
    [X] bsd.mp        [X] comp74.tgz    [ ] xbase74.tgz   [ ] xserv74.tgz
    [X] bsd.rd        [X] man74.tgz     [ ] xshare74.tgz
Set name(s)? (or 'abort' or 'done') [done]
#+END_SRC


Then, continue

#+BEGIN_SRC bash
  Directory does not contain SHA256.sig. Continue without verification? [no] yes
  Installing bsd          100% |**************************| 24750 KB    00:00
  Installing bsd.mp       100% |**************************| 24845 KB    00:00
  Installing bsd.rd       100% |**************************|  4550 KB    00:00
  Installing base74.tgz   100% |**************************|   368 MB    00:06
  Extracting etc.tgz      100% |**************************|   257 KB    00:00
  Installing comp74.tgz   100% |**************************| 75644 KB    00:02
  Installing man74.tgz    100% |**************************|  7831 KB    00:00
  Location of sets? (disk http nfs or 'done') [done]
#+END_SRC


*** Timezone

#+BEGIN_SRC bash
  What timezone are you in? ('?' for list) [Canada/Mountain] Pacific/Auckland
#+END_SRC


*** Shutdown the VM

#+BEGIN_SRC bash
  CONGRATULATIONS! Your OpenBSD install has been successfully completed!

  When you login to your new system the first time, please read your mail
  using the 'mail' command.

  Exit to (S)hell, (H)alt or (R)eboot? [reboot] h
#+END_SRC


And you have poweroff the VM manually, otherwise, reboot will kick start the installation process again!!!

#+BEGIN_SRC bash
  doas vm poweroff my-openbsd
  Are you sure you want to forcefully poweroff this virtual machine (y/n)? y
#+END_SRC





*** Install sets from USB


When it asks =Which disk is the root disk=, you can press =?= to list all the physical disks in your computer, then markdown the =USB= install media one (e.g. =sd1=).

When asking =Location of sets?=, type =disk=.

When asking =Is the disk partition already mounted?= type =no=

When asking =Which disk contains the install media?= type =sd1= (the disk name you markdown before)

So you should be able to install sets via =disk=:)



** Install process for =TH80=

*** Network configuration

#+BEGIN_SRC bash
  System hostname? (short form, e.g. 'foo') my-openbsd

  Available network interfaces are: igc0 iwx0 vlan0.

  #
  # Ethernet
  #
  Network interface to configure? (name, lladdr, '?', or 'done') [igc]
  IPv4 address for igc0? (or 'autoconf' or 'none') [autoconf]
  IPv6 address for igc0? (or 'autoconf' or 'none') [none]

  #
  # Wifi is not available at this moment, as ISO doesn't include firmware yet!!!
  #
  Network interface to configure? (name, lladdr, '?', or 'done') [done]

  DNS domain name? (e.g. 'example.com') [my.domain] my-openbsd.domain
  Using DNS nameservers at 192.168.1.200
#+END_SRC


*** Enable services

#+BEGIN_SRC bash
  #
  # For better console configuration after installation
  #
  Start sshd(8) by default? [yes]

  #
  # I don't use any display manager, so `no`
  #
  Do you want the X Window System to be started by xenodm(1)? [no]
#+END_SRC


*** Timezone

#+BEGIN_SRC bash
  What timezone are you in? ('?' for list) [Pacific/Auckland]
#+END_SRC


*** Partitioning

#+BEGIN_SRC bash
  Available disks are: sd0 sd1 sd2
  Which disk is the root disk? ('?' for details) [sd0] ?
      sd0: NVMe, Samsung SSD 970, 4B2Q (931.5G)
      sd1: NVMe, Samsung SSD 970, 4B2Q (931.5G)
      sd2: SanDisk, Ultra USB 3.0. ... (28.6G)
  Available disks are: sd0 sd1 sd2

  #
  # `sd0` should be my `FreeBSD`, then choose `sd1` for `OpenBSD`
  #
  Which disk is the root disk? ('?' for details) [sd0] sd1

  Encrypt the root disk with a (P)assphrase or (k)eydisk? [no]
  No valid MBR or GPT.

  #
  # Make sure to use `GPT` partitions, otherwise, it won't boot!!!
  #
  Use (W)hole disk MBR, whole disk (G)PT or (E)dit? [gpt] G
  Setting OpenBSD GPT partition to whole sd1...done.
  The auto-allocated layout for sd1 is:
  #                size           offset  fstype [fsize bsize   cpg]
    a:              1.G               64   4.2BSD   2048 16384     1 # /
    b:            64.0G          2097216    swap
    c:           921.5G                0  unused
    d:             4.0G        XXXXXXXXX  4.2BSD   2048 16384     1 # /tmp
    e:           119.8G        XXXXXXXXX  4.2BSD   2048 16384     1 # /var
    f:              30G        XXXXXXXXX  4.2BSD   2048 16384     1 # /usr
    g:             1.0G        XXXXXXXXX  4.2BSD   2048 16384     1 # /usr/X11R6
    h:            20.0G        XXXXXXXXX  4.2BSD   2048 16384     1 # /usr/local
    i:             0.3G               64  MSDOS
    j:             3.0G        XXXXXXXXX  4.2BSD   2048 16384     1 # /usr/src
    k:             6.0G        XXXXXXXXX  4.2BSD   2048 16384     1 # /usr/obj
    l:           300.0G        XXXXXXXXX  4.2BSD   2048 16384     1 # /home

  Use (A)uto layout, (E)dit auto layout, or create (C)ustom layout? [a] a
#+END_SRC


By default, it doesn't use the the whole disk (at least on my =1TB= SSD), so you have to press =e= (Edit auto layout) to confirm that you have =free= space or not!!!

#+BEGIN_SRC bash
  #
  # Print paritions in `GB` unit
  #
  sd1> p G
  OpenBSD area: 64-195325168; size 931.5G; free: 382.7G
  #                size           offset  fstype [fsize bsize   cpg]
    # ... ignore above
    l:           300.0G        XXXXXXXXX  4.2BSD   2048 16384     1 # /home
#+END_SRC


So, you need to put all the =free= spaces (=382.7G=) into the =k: /home= partition like this:

#+BEGIN_SRC bash
  #
  # Reisze `k` partition
  #
  sd1> R l
  [+|-]new size (with unit): [xxxxxxxx] + 382.7G

  #
  # You can see the promot add a `*` at the end, that means layout has been modified.
  #
  sd1*>
#+END_SRC


Now, print the paritions to confirm again, should have no free spaces:

#+BEGIN_SRC bash
  #
  # Print paritions in `GB` unit
  #
  sd1> p G
  OpenBSD area: 64-195325168; size 931.5G; free: 0.0G
  #                size           offset  fstype [fsize bsize   cpg]
    # ... ignore above
    k:           682.7G        XXXXXXXXX  4.2BSD   2048 16384     1 # /home
#+END_SRC


Then save and quit the layout editor:

#+BEGIN_SRC bash
  sd1*> w
  sd1> q

  Available disks are: sd0 sd2
  Which disk do you wish to initialize? (or 'done') [done]
#+END_SRC


*** Install file sets

Let's install the sets!

#+BEGIN_SRC bash
  Location of sets? (disk http nfs or 'done') [http] disk
  Is the disk partition already mounted? [no]
  Available disks are: sd0 sd1 sd2
  Which disk contains the install media? (or 'done') [sd0] sd2
    a:          1358848             1024  4.2BSD   2048 16384 16142
    i:              960               64   MSDOS
  Available sd2 partitions are: a i.
  Which sd2 partition has the install sets? (or 'done') [a]
  Pathname to the sets? (or 'done') [7.5/amd64]

  Select sets by entering a set name, a file name pattern or 'all'. De-select
  sets by prepending a '-', e.g.: '-game*'. Selected sets are labelled '[X]'.
      [X] bsd           [X] base74.tgz    [X] game74.tgz    [X] xfont74.tgz
      [X] bsd.mp        [X] comp74.tgz    [X] xbase74.tgz   [X] xserv74.tgz
      [X] bsd.rd        [X] man74.tgz     [X] xshare74.tgz
#+END_SRC

And here is the description for each file set:

#+BEGIN_SRC fish
  bsd	        The kernel (required)
  bsd.mp	        The multi-processor kernel (only on some platforms)
  bsd.rd	        The ramdisk kernel
  base74.tgz	The base system (required)
  comp74.tgz	The compiler collection, headers and libraries
  man74.tgz	Manual pages
  game74.tgz	Text-based games
  xbase74.tgz	Base libraries and utilities for X11 (requires xshare74.tgz)
  xfont74.tgz	Fonts used by X11
  xserv74.tgz	X11's X servers
  xshare74.tgz	X11's man pages, locale settings and includes
#+END_SRC

If you don't need =X=, then de-selection the following file sets:

#+BEGIN_SRC bash
Set name(s)? (or 'abort' or 'done') [done] -game*
    [X] bsd           [X] base74.tgz    [ ] game74.tgz    [X] xfont74.tgz
    [X] bsd.mp        [X] comp74.tgz    [X] xbase74.tgz   [X] xserv74.tgz
    [X] bsd.rd        [X] man74.tgz     [X] xshare74.tgz
Set name(s)? (or 'abort' or 'done') [done] -x*
    [X] bsd           [X] base74.tgz    [ ] game74.tgz    [ ] xfont74.tgz
    [X] bsd.mp        [X] comp74.tgz    [ ] xbase74.tgz   [ ] xserv74.tgz
    [X] bsd.rd        [X] man74.tgz     [ ] xshare74.tgz
Set name(s)? (or 'abort' or 'done') [done]
#+END_SRC


Then, continue

#+BEGIN_SRC bash
  Directory does not contain SHA256.sig. Continue without verification? [no] yes
  Installing bsd          100% |**************************| 24750 KB    00:00
  Installing bsd.mp       100% |**************************| 24845 KB    00:00
  Installing bsd.rd       100% |**************************|  4550 KB    00:00
  Installing base74.tgz   100% |**************************|   368 MB    00:06
  Extracting etc.tgz      100% |**************************|   257 KB    00:00
  Installing comp74.tgz   100% |**************************| 75644 KB    00:02
  Installing man74.tgz    100% |**************************|  7831 KB    00:00
  Location of sets? (disk http nfs or 'done') [done]
#+END_SRC



*** Firmware update

If your ethernet works at this momen, the firmeware should updated automatically like below:

#+BEGIN_SRC bash
  Multipcessor machine; using bsd.mp instead of bsd.
  fw_update: add intel, inteldrm, iwx; update none 
  Relinking to create unque kernel...
#+END_SRC
